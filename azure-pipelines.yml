trigger:
  branches:
    include:
    - next
    - staging
    - develop

pool:
  vmImage: 'windows-latest'

variables:
- name: buildToken
  ${{ if eq(variables['Build.SourceBranchName'], 'next') }}: 
    value: 'prod'
  ${{ if eq(variables['Build.SourceBranchName'], 'staging') }}: 
    value: 'staging'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}: 
    value: 'develop'
- name: firebaseProjectId
  ${{ if eq(variables['Build.SourceBranchName'], 'next') }}: 
    value: 'pos-dev-47526'
  ${{ if eq(variables['Build.SourceBranchName'], 'staging') }}: 
    value: 'pos-staging-d2244'
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}: 
    value: 'pos-prod-35f28'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'
  
- script: |
    npm install -g firebase-tools
  displayName: 'Install firebase tools'

- script: |
    cd $(System.DefaultWorkingDirectory)/functions
    npm install -f
  displayName: 'Npm install'

- script: |
    echo "Generating params.env.json..."
    cat <<EOF > params.env.json
    {
      "BIGQUERY_PROJECT_ID": "$(firebaseProjectId)",
      "CLUSTERING": "tenant_id",
      "COLLECTION_PATH": "clients/{clientId}/salesorders",
      "DATASET_ID": "pos_main",
      "DATASET_LOCATION": "europe-west2",
      "EXCLUDE_OLD_DATA": "yes",
      "firebaseextensions.v1beta.function/location": "europe-west2",
      "MAX_DISPATCHES_PER_SECOND": 100,
      "MAX_ENQUEUE_ATTEMPTS": 3,
      "TABLE_ID": "tbl_sale_orders",
      "TABLE_PARTITIONING": "MONTH",
      "TIME_PARTITIONING_FIELD": "createdDate",
      "TIME_PARTITIONING_FIELD_TYPE": "TIMESTAMP",
      "TIME_PARTITIONING_FIRESTORE_FIELD": "createdDate",
      "USE_NEW_SNAPSHOT_QUERY_SYNTAX": "yes",
      "WILDCARD_IDS": true
    }
    EOF
  displayName: 'Generate Params File'

- script: |
    echo "Deploying Firebase Extension from custom GitHub branch..."
    firebase ext:install --token $(FIREBASE_TOKEN) --source https://github.com/VibinKesavan/extensions/tree/$(buildToken)/firestore-bigquery-export --params=params.env.json --project=$(firebaseProjectId) --force
  env:
    FIREBASE_PROJECT_ID: $(firebaseProjectId)
  displayName: 'Deploy Firebase Extensions'